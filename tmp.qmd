---
title: "tmp"
---

```{r}
library(tidyverse)
```


```{r}
draw_garden <- function(n, blue, smpl) {
    sn <- length(smpl)

    positions_lst <- sapply(1:sn, function(x) (1:(n^x)) / n^(x-1))
    positions <- unlist(positions_lst)
    parents_lst <- sapply(1:sn, function(x) rep(1:n, each = n^(x-1)))
    parents <- unlist(parents_lst)
    print(parents_lst)

    d <- tibble(        
        position = positions,
        draw = rep(
          1:sn,
          times = n^(1:sn)
          ),
        fill = rep(
          c("b", "w"),
          times = c(blue, n - blue)
          ) %>% 
           rep(., 
            times = sum(n^(0:(sn-1)))
           ),
        parent = parents,
        pos_char = as.character(positions)
    )

    lines_lst <- lapply(
      1:(sn - 1), 
      function(s) tibble(
        x = rep(((1:(n^s)) / (n^(s - 1))), each = n),
        xend = (1:(n^(s + 1))) / (n^s),
        y = s,
        yend = s + 1,
        draw = s,
      )
    )
    lines_len <- sapply(lines_lst, nrow)

    lines_dt <- bind_rows(lines_lst) %>%
      left_join(
        d %>% 
          select(draw, position, fill) %>%
          rename(fill_start = fill),
        by = c("draw" = "draw", "x" = "position")
      ) %>%
      left_join(
        d %>% 
          mutate(
            draw = draw - 1
          ) %>%
          select(draw, position, fill) %>%
          rename(fill_end = fill),
        by = c("draw" = "draw", "xend" = "position")
      ) %>%
      mutate(
        fill_smpl = smpl[draw],
        fill_smpl_next = smpl[draw + 1],
        visible = ifelse(fill_start == fill_smpl & fill_end == fill_smpl_next, 1, 0)
      )

    for (i in 1:(sn - 2)) {
      lines_dt <- lines_dt %>%
        left_join(
          lines_dt %>%
            select(draw, visible, xend) %>%
            rename(parent_visible = visible) %>%
            mutate(
              draw = draw + i
            ),
          by = c("draw" = "draw", "x" = "xend")
        ) %>%
        mutate(
          visible = ifelse(
            is.na(parent_visible), 
            visible, 
            ifelse(
              parent_visible == 0, 
              0,
              visible
            )
          ),
        ) %>%
        select(-parent_visible)
    }

    lines_dt <- lines_dt %>%
      mutate(
        x = x - .5 / n^(draw - 1),
        xend = xend - .5 / n^(draw)
      )

    d <- d %>% 
        mutate(
            denominator = ifelse(draw == 1, .5,
                                ifelse(draw == 2, .5 / n,
                                        .5 / n^2)),
            position = position - denominator
        )

    plt <- d %>% 
      ggplot(aes(x = position, y = draw)) +
      geom_segment(data  = lines_dt,
                   aes(x = x, xend = xend,
                       y = y, yend = yend,
                       alpha = visible %>% as.character()
                       ),
                   size  = 1/3) +
      geom_point(aes(fill = fill),
                  shape = 21, size = 4) +
      scale_fill_manual(values  = c("navy", "white")) +
      scale_alpha_manual(values = c(1/10, 1)) +
      scale_x_continuous(NULL, limits = c(0, n), breaks = NULL) +
      scale_y_continuous(NULL, limits = c(0.75, sn), breaks = NULL) +
      theme(panel.grid      = element_blank(),
              legend.position = "none") + 
      coord_polar()

    plot(plt)
    return(list(d, lines_dt))
}
```

```{r}
out <- draw_garden(n = 4, blue=1, smpl=c("b", "w", "b"))
lines_dt_out <- out[[2]]
dt_out <- out[[1]]
```
