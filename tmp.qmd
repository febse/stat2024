---
title: "tmp"
---

```{r}
library(tidyverse)
```


```{r}
d <- tibble(
  position = c((1:4^1) / 4^0, 
                      (1:4^2) / 4^1, 
                      (1:4^3) / 4^2),
         draw     = rep(1:3, times = c(4^1, 4^2, 4^3)),
         fill     = rep(c("b", "w"), times = c(1, 3)) %>% 
           rep(., times = c(4^0 + 4^1 + 4^2))
    )

lines_1 <-  tibble(
  x = rep((1:4), each = 4),
         xend = ((1:4^2) / 4),
         y    = 1,
         yend = 2)

lines_2 <- tibble(
  x    = rep(((1:4^2) / 4), each = 4),
         xend = (1:4^3) / (4^2),
         y    = 2,
         yend = 3
         )

d <- d %>% 
  mutate(denominator = ifelse(draw == 1, .5,
                              ifelse(draw == 2, .5 / 4,
                                     .5 / 4^2))) %>% 
  mutate(position    = position - denominator)

lines_1 <- lines_1 %>% 
  mutate(
    x    = x - .5,
         xend = xend - .5 / 4^1
  )

lines_2 <- lines_2 %>%
  mutate(
    x    = x - .5 / 4^1,
         xend = xend - .5 / 4^2)
```

```{r}
d %>% 
  ggplot(aes(x = position, y = draw)) +
  geom_segment(data  = lines_1,
               aes(x = x, xend = xend,
                   y = y, yend = yend),
               size  = 1/3) +
  geom_segment(data  = lines_2,
               aes(x = x, xend = xend,
                   y = y, yend = yend),
               size  = 1/3) +
  geom_point(aes(fill = fill),
             shape = 21, size = 4) +
  scale_fill_manual(values  = c("navy", "white")) +
  scale_x_continuous(NULL, limits = c(0, 4), breaks = NULL) +
  scale_y_continuous(NULL, limits = c(0.75, 3), breaks = NULL) +
  theme(panel.grid      = element_blank(),
        legend.position = "none") +
  coord_polar()
```

```{r}
lines_1 <-
  lines_1 %>% 
  mutate(remain = c(rep(0:1, times = c(1, 3)),
                    rep(0,   times = 4 * 3)))

lines_2 <-
  lines_2 %>% 
  mutate(remain = c(rep(0,   times = 4),
                    rep(1:0, times = c(1, 3)) %>% 
                      rep(., times = 3),
                    rep(0,   times = 12 * 4)))

d <-
  d %>% 
  mutate(remain = c(rep(1:0, times = c(1, 3)),
                    rep(0:1, times = c(1, 3)),
                    rep(0,   times = 4 * 4),
                    rep(1:0, times = c(1, 3)) %>% 
                      rep(., times = 3),
                    rep(0,   times = 12 * 4))) 

# finally, the plot:
d %>% 
  ggplot(aes(x = position, y = draw)) +
  geom_segment(data = lines_1,
               aes(
                 x = x, xend = xend,
                 y = y, yend = yend,
                 alpha = remain %>% as.character()),
                size  = 1/3
               ) +
  geom_segment(data  = lines_2,
               aes(x = x, xend = xend,
                   y = y, yend = yend,
                   alpha = remain %>% as.character()),
               size  = 1/3) +
  geom_point(aes(fill = fill, alpha = remain %>% as.character()),
             shape = 21, size = 4) +
  # it's the alpha parameter that makes elements semitransparent
  scale_alpha_manual(values = c(1/10, 1)) +
  scale_fill_manual(values  = c("navy", "white")) +
  scale_x_continuous(NULL, limits = c(0, 4), breaks = NULL) +
  scale_y_continuous(NULL, limits = c(0.75, 3), breaks = NULL) +
  theme(panel.grid      = element_blank(),
        legend.position = "none") + 
  coord_polar()
```


```{r}
n <- 4
sn <- 3
c(
  (1:n^1) / n^0,
  (1:n^2) / n^1, 
  (1:n^3) / n^2
)
```

```{r}
draw_garden <- function(n, blue, smpl) {
    sn <- length(smpl)

    positions_lst <- sapply(1:sn, function(x) (1:(n^x)) / n^(x-1))
    positions <- unlist(positions_lst)

    d <- tibble(
        
        position = positions,
        draw = rep(
          1:sn,
          times = n^(1:sn)
          ),
        fill = rep(
          c("b", "w"),
          times = c(blue, n - blue)
          ) %>% 
           rep(., 
            times = sum(n^(0:(sn-1)))
           )
    )

    lines_lst <- lapply(
      1:(sn - 1), 
      function(s) tibble(
        x = rep(((1:(n^s)) / (n^(s - 1))), each = n),
        xend = (1:(n^(s + 1))) / (n^s),
        y = s,
        yend = s + 1,
        draw = s,
        fill = rep(
          c("b", "w"),
          times = c(blue, n - blue)
          ) %>% 
           rep(., times = n^s),
        visible = (fill != smpl[s])
      )
    )
    lines_len <- sapply(lines_lst, nrow)

    lines_dt <- bind_rows(lines_lst) %>%
      mutate(
        x = x - .5 / n^(draw - 1),
        xend = xend - .5 / n^(draw)
      )

    d <- d %>% 
        mutate(
            denominator = ifelse(draw == 1, .5,
                                ifelse(draw == 2, .5 / n,
                                        .5 / n^2)),
            position = position - denominator
        )

    d %>% 
      ggplot(aes(x = position, y = draw)) +
      geom_segment(data  = lines_dt,
                   aes(x = x, xend = xend,
                       y = y, yend = yend,
                       alpha = visible %>% as.character()),
                   size  = 1/3) +
      geom_point(aes(fill = fill),
                  shape = 21, size = 4) +
      scale_fill_manual(values  = c("navy", "white")) +
      scale_alpha_manual(values = c(1/10, 1)) +
      scale_x_continuous(NULL, limits = c(0, n), breaks = NULL) +
      scale_y_continuous(NULL, limits = c(0.75, sn), breaks = NULL) +
      theme(panel.grid      = element_blank(),
              legend.position = "none") + 
      coord_polar()
}
```

```{r}
draw_garden(n = 4, blue=1, smpl=c("b", "w", "b"))
```

```{r}
lines_1 <-  tibble(
    x = rep((1:n), each = n),
    xend = ((1:n^2) / n),
    y = 1,
    yend = 2
    )
lines_1
```

```{r}

tm <- expand_grid(
  draw = 1:3,
  
  x = paste0(rep(c("b", "w"), c(1, 3)), 1:4),
  
  pos = 1:3,
  fill = 1:3
)

nrow(tm)
```

